

package tictactoe;

import java.util.Random;
import java.util.Scanner;


public class TicTacToe {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        char[][] printable = {
            {'1','2','3'},
            {'4','5','6'},
            {'7','8','9'}                
        };
        boolean winner = false;
       /*                intro               */
        System.out.println("What is your name?");
        String name = sc.nextLine();
        System.out.println( tableModel(printable)  );
                               
         /*              game            */
        do{
          System.out.println(name + "'s turn");
          userTurn(sc.nextInt(), printable);
          System.out.println("Computer's turn");
          pcTurn(printable);        
          winner = wins(winner, printable, name);
        }while(!winner);
    }
 
    public static void checking (char printable [][]){
          for (int i = 0; i<printable.length; i++){
            for (int j= 0;j<printable[i].length;  j++){
                System.out.println("pint ["+ i + "]["+ j + "]: " + printable [i][j] );
            }
        }
    }

    public static String tableModel (char printable [][] ){
        String table = ""+ printable[0][0]+" | " +printable[0][1]+" | " +printable[0][2] + "\n" +
                               "__|___|__ \n" +
                           printable[1][0]+" | "+printable[1][1]+" | "+printable[1][2]+" \n" +
                               "__|___|__ \n" +
                           printable[2][0]+" | "+printable[2][1]+" | "+printable[2][2]+" \n" +
                               "  |   |   \n "
        ;
        return table;  
    }

    public static void userTurn(int input, char t [][]){

       
        switch (input) {
            case 1:
                t [0][0] = 'x';                  
            break;
            case 2:
                t [0][1] = 'x';
                break;  
            case 3:
                t [0][2] = 'x';
                break;
            case 4:
                t [1][0] = 'x';
                break;
            case 5:
                t [1][1] = 'x';
                break;
            case 6:
                t [1][2] = 'x';      
                break;
           case 7:
                t [2][0] = 'x';
                break;
           case 8:
               t [2][1] = 'x';
               break;
           case 9:
               t [2][2] = 'x';
               break;
           default :
               System.out.println("Not a valid option. Forfeit a turn.");
        }
    }
   
    public static void pcTurn (char t[][]){
       Random num = new Random ();
        int i = num.nextInt(3);
        int j = num.nextInt(3);
        boolean getOut = false;
         while (!getOut){
            if ( (t[i][j] != 'x')&&(t[i][j] != 'o') ){
                t[i][j] = 'o';      
                getOut =true;
            }else {
                i = num.nextInt(3);
                j = num.nextInt(3);
            }            
         }
         System.out.println(tableModel(t));        
    }
   
    public static boolean wins (boolean win, char t [][] , String name){
       
    if(
         ((t[0][0] =='x') && (t[0][1] =='x') &&(t[0][2] =='x')) ||
         ((t[1][0] =='x') && (t[1][1] =='x') &&(t[1][2] =='x')) ||
         ((t[2][0] =='x') && (t[2][1] =='x') &&(t[2][2] =='x')) ||
         ((t[0][0] =='x') && (t[1][1] =='x') &&(t[2][2] =='x')) ||
         ((t[0][2] =='x') && (t[2][1] =='x') &&(t[2][0] =='x')) ||
         ((t[0][0] =='x') && (t[1][0] =='x') &&(t[2][0] =='x')) ||  
         ((t[0][1] =='x') && (t[1][1] =='x') &&(t[2][1] =='x')) ||
         ((t[0][2] =='x') && (t[1][2] =='x') &&(t[2][2] =='x'))
        ){
                System.out.println("You win!");
                win = true;
                     
        }  
    if(
         ((t[0][0] =='o') && (t[0][1] =='o') &&(t[0][2] =='o')) ||
         ((t[1][0] =='o') && (t[1][1] =='o') &&(t[1][2] =='o')) ||
         ((t[2][0] =='o') && (t[2][1] =='o') &&(t[2][2] =='o')) ||
         ((t[0][0] =='o') && (t[1][1] =='o') &&(t[2][2] =='o')) ||
         ((t[0][2] =='o') && (t[2][1] =='o') &&(t[2][0] =='o')) ||
         ((t[0][0] =='o') && (t[1][0] =='o') &&(t[2][0] =='o')) ||  
         ((t[0][1] =='o') && (t[1][1] =='o') &&(t[2][1] =='o')) ||
         ((t[0][2] =='o') && (t[1][2] =='o') &&(t[2][2] =='o'))
        ){
                System.out.println("Computer wins!");
                win = true;
                     
        }  
/*    if( 
         ((t[0][0] != t[0][1]) && (t[0][1] != (t[0][2])) &&

                System.out.println("It's a tie!");
                     
        }
*/   
   return win;
    }
}
